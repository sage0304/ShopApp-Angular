{"ast":null,"code":"import { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./http.util.service\";\nexport class UserService {\n  constructor(http, httpUtilService) {\n    this.http = http;\n    this.httpUtilService = httpUtilService;\n    this.apiRegister = `${environment.apiBaseUrl}/users/register`;\n    this.apiLogin = `${environment.apiBaseUrl}/users/login`;\n    this.apiConfig = {\n      headers: this.httpUtilService.createHeaders()\n    };\n  }\n  register(registerDTO) {\n    return this.http.post(this.apiRegister, registerDTO, this.apiConfig);\n  }\n  login(loginDTO) {\n    return this.http.post(this.apiLogin, loginDTO, this.apiConfig);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HttpUtilService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","UserService","constructor","http","httpUtilService","apiRegister","apiBaseUrl","apiLogin","apiConfig","headers","createHeaders","register","registerDTO","post","login","loginDTO","i0","ɵɵinject","i1","HttpClient","i2","HttpUtilService","factory","ɵfac","providedIn"],"sources":["D:\\CODING STUDY\\SpringBoot Udemy\\shopapp-angular\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { RegisterDTO } from '../dtos/user/register.dto';\nimport { LoginDTO } from '../dtos/user/login.dto';\nimport { environment } from '../environments/environment';\nimport { HttpUtilService } from './http.util.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiRegister = `${environment.apiBaseUrl}/users/register`;\n  private apiLogin = `${environment.apiBaseUrl}/users/login`;\n\n  private apiConfig = {\n    headers: this.httpUtilService.createHeaders(),\n  }\n\n  constructor(\n    private http: HttpClient,\n    private httpUtilService: HttpUtilService\n  ) { }\n\n  register(registerDTO: RegisterDTO):Observable<any> {\n    return this.http.post(this.apiRegister, registerDTO, this.apiConfig);\n  }\n\n  login(loginDTO: LoginDTO): Observable<any> {    \n    return this.http.post(this.apiLogin, loginDTO, this.apiConfig);\n  }\n\n}\n"],"mappings":"AAKA,SAASA,WAAW,QAAQ,6BAA6B;;;;AAMzD,OAAM,MAAOC,WAAW;EAQtBC,YACUC,IAAgB,EAChBC,eAAgC;IADhC,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,eAAe,GAAfA,eAAe;IATjB,KAAAC,WAAW,GAAG,GAAGL,WAAW,CAACM,UAAU,iBAAiB;IACxD,KAAAC,QAAQ,GAAG,GAAGP,WAAW,CAACM,UAAU,cAAc;IAElD,KAAAE,SAAS,GAAG;MAClBC,OAAO,EAAE,IAAI,CAACL,eAAe,CAACM,aAAa;KAC5C;EAKG;EAEJC,QAAQA,CAACC,WAAwB;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACR,WAAW,EAAEO,WAAW,EAAE,IAAI,CAACJ,SAAS,CAAC;EACtE;EAEAM,KAAKA,CAACC,QAAkB;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACU,IAAI,CAAC,IAAI,CAACN,QAAQ,EAAEQ,QAAQ,EAAE,IAAI,CAACP,SAAS,CAAC;EAChE;;AAnBWP,WAAW,C;mBAAXA,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,eAAA;AAAA;AAAXpB,WAAW,C;SAAXA,WAAW;EAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}