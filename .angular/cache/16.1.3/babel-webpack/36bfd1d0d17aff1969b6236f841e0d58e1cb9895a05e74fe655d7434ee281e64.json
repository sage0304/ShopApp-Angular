{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from 'src/app/environments/environment';\nexport let HomeComponent = class HomeComponent {\n  constructor(productService, categoryService, router) {\n    this.productService = productService;\n    this.categoryService = categoryService;\n    this.router = router;\n    this.products = [];\n    this.categories = []; // Dữ liệu động từ categoryService\n    this.selectedCategoryId = 0; // Giá trị category được chọn\n    this.currentPage = 1;\n    this.itemsPerPage = 12;\n    this.pages = [];\n    this.totalPages = 0;\n    this.visiblePages = [];\n    this.keyword = \"\";\n  }\n  ngOnInit() {\n    this.getProducts(this.keyword, this.selectedCategoryId, this.currentPage, this.itemsPerPage);\n    this.getCategories(1, 100);\n  }\n  getCategories(page, limit) {\n    this.categoryService.getCategories(page, limit).subscribe({\n      next: categories => {\n        debugger;\n        this.categories = categories;\n      },\n      complete: () => {\n        debugger;\n      },\n      error: error => {\n        console.error('Error fetching categories:', error);\n      }\n    });\n  }\n  searchProducts() {\n    this.currentPage = 1;\n    this.itemsPerPage = 12;\n    debugger;\n    this.getProducts(this.keyword, this.selectedCategoryId, this.currentPage, this.itemsPerPage);\n  }\n  getProducts(keyword, selectedCategoryId, page, limit) {\n    debugger;\n    this.productService.getProducts(keyword, selectedCategoryId, page, limit).subscribe({\n      next: response => {\n        debugger;\n        response.products.forEach(product => {\n          product.url = `${environment.apiBaseUrl}/products/images/${product.thumbnail}`;\n        });\n        this.products = response.products;\n        this.totalPages = response.totalPages;\n        this.visiblePages = this.generateVisiblePageArray(this.currentPage, this.totalPages);\n      },\n      complete: () => {\n        debugger;\n      },\n      error: error => {\n        debugger;\n        console.error('Error fetching products:', error);\n      }\n    });\n  }\n  onPageChange(page) {\n    debugger;\n    this.currentPage = page;\n    this.getProducts(this.keyword, this.selectedCategoryId, this.currentPage, this.itemsPerPage);\n  }\n  generateVisiblePageArray(currentPage, totalPages) {\n    const maxVisiblePages = 5;\n    const halfVisiblePages = Math.floor(maxVisiblePages / 2);\n    let startPage = Math.max(currentPage - halfVisiblePages, 1);\n    let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\n    if (endPage - startPage + 1 < maxVisiblePages) {\n      startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n    }\n    return new Array(endPage - startPage + 1).fill(0).map((_, index) => startPage + index);\n  }\n  // Hàm xử lý sự kiện khi sản phẩm được bấm vào\n  onProductClick(productId) {\n    debugger;\n    // Điều hướng đến trang detail-product với productId là tham số\n    this.router.navigate(['/detail-product', productId]);\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})], HomeComponent);","map":{"version":3,"names":["Component","environment","HomeComponent","constructor","productService","categoryService","router","products","categories","selectedCategoryId","currentPage","itemsPerPage","pages","totalPages","visiblePages","keyword","ngOnInit","getProducts","getCategories","page","limit","subscribe","next","complete","error","console","searchProducts","response","forEach","product","url","apiBaseUrl","thumbnail","generateVisiblePageArray","onPageChange","maxVisiblePages","halfVisiblePages","Math","floor","startPage","max","endPage","min","Array","fill","map","_","index","onProductClick","productId","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\CODING STUDY\\SpringBoot Udemy\\shopapp-angular\\src\\app\\components\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Product } from '../../models/product';\r\nimport { Category } from '../../models/category';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { environment } from 'src/app/environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  products: Product[] = [];\r\n  categories: Category[] = []; // Dữ liệu động từ categoryService\r\n  selectedCategoryId: number  = 0; // Giá trị category được chọn\r\n  currentPage: number = 1;\r\n  itemsPerPage: number = 12;\r\n  pages: number[] = [];\r\n  totalPages:number = 0;\r\n  visiblePages: number[] = [];\r\n  keyword:string = \"\";\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private categoryService: CategoryService,    \r\n    private router: Router\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.getProducts(this.keyword, this.selectedCategoryId, this.currentPage, this.itemsPerPage);\r\n    this.getCategories(1, 100);\r\n  }\r\n  getCategories(page: number, limit: number) {\r\n    this.categoryService.getCategories(page, limit).subscribe({\r\n      next: (categories: Category[]) => {\r\n        debugger\r\n        this.categories = categories;\r\n      },\r\n      complete: () => {\r\n        debugger;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error fetching categories:', error);\r\n      }\r\n    });\r\n  }\r\n  searchProducts() {\r\n    this.currentPage = 1;\r\n    this.itemsPerPage = 12;\r\n    debugger\r\n    this.getProducts(this.keyword, this.selectedCategoryId, this.currentPage, this.itemsPerPage);\r\n  }\r\n  getProducts(keyword: string, selectedCategoryId: number, page: number, limit: number) {\r\n    debugger\r\n    this.productService.getProducts(keyword, selectedCategoryId, page, limit).subscribe({\r\n      next: (response: any) => {\r\n        debugger\r\n        response.products.forEach((product: Product) => {          \r\n          product.url = `${environment.apiBaseUrl}/products/images/${product.thumbnail}`;\r\n        });\r\n        this.products = response.products;\r\n        this.totalPages = response.totalPages;\r\n        this.visiblePages = this.generateVisiblePageArray(this.currentPage, this.totalPages);\r\n      },\r\n      complete: () => {\r\n        debugger;\r\n      },\r\n      error: (error: any) => {\r\n        debugger;\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    });    \r\n  }\r\n  onPageChange(page: number) {\r\n    debugger;\r\n    this.currentPage = page;\r\n    this.getProducts(this.keyword, this.selectedCategoryId, this.currentPage, this.itemsPerPage);\r\n  }\r\n\r\n  generateVisiblePageArray(currentPage: number, totalPages: number): number[] {\r\n    const maxVisiblePages = 5;\r\n    const halfVisiblePages = Math.floor(maxVisiblePages / 2);\r\n\r\n    let startPage = Math.max(currentPage - halfVisiblePages, 1);\r\n    let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\r\n\r\n    if (endPage - startPage + 1 < maxVisiblePages) {\r\n      startPage = Math.max(endPage - maxVisiblePages + 1, 1);\r\n    }\r\n\r\n    return new Array(endPage - startPage + 1).fill(0).map((_, index) => startPage + index);\r\n  }\r\n  // Hàm xử lý sự kiện khi sản phẩm được bấm vào\r\n  onProductClick(productId: number) {\r\n    debugger\r\n    // Điều hướng đến trang detail-product với productId là tham số\r\n    this.router.navigate(['/detail-product', productId]);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}